@import "../js/base/style/colours.less";

.page.MyPage {
	text-align: center;
}

// DigitalMirrorCard: a widget for showing the user their twitter data (experimental)
.mirror {
	.profile-details {
		text-align: left;
		line-height: 50px; 
		margin-top: 1vmin;

		.form-control {
			display: inline-block;
			padding: 4px; // align non-dropdown with dropdown input values
		}

		select {
			width: 80%; // hack to align dropdown fields with non-dropdown fields
			border: 1px solid #ccc; //just to make it look more modern
		}
	}

	// aligning profile photo with profile details
	.profile-photo {
		margin-top: 3vmin;
	}

	.profile-name  {
		height: 100%;
		font-size: 30px !important;
	}
	
	input[type="text"] {
		font-size: 22px;
		width: 80%;
	}

	 // ugly hack to align profile-name with the values below (relevant when in edit mode)
	input[type="text"].profile-name.form-control {
		width: 93%;
	}

	// Override PropControl class
	// Checkbox adding padding to left of checkbox
	// was resulting in jarring transition between display and edit mode
	.checkbox label {
		padding-left: 0;
	}

	.input-label {
		height: 25px;
		width: 25px;
		text-align: center;

		i {
			width: 100%;
			height: auto;
			display: block; // Prevent line-height displacing icon
		}
	}
}

// TODO: combine DigitalMirrorCard and DigitalMirrorCardDesign and tidy up code
.vertical-align {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
}

// Used to reset line-height of bootstrap rows in DigitalMirror
// makes toggling 'Edit' mode much less jarring
.revertHeight {
	line-height: inherit;
}

/** size a user profile picture*/
.img-profile {
	width: 64px;
	max-height: 100px;
}

.word-wrap {
	word-break: break-all;
}

// on my-loop we only want to show gl social links, so center the content and unset flex
.grid-tile.bottom .foot.center .social {
	text-align: center;
	margin: 0 auto;
	flex-basis: unset;
}

// set the vertiser logo sizes and put in some space between them to look less cluttered
.vertiser-row {
		display: flex;
		justify-content: space-around;
		flex-direction: row;
		width: 100%;
		text-align: center;
		flex-wrap: wrap;
}

.img-container {
	text-align: center;
}

// These only really work as part of a thin column
.impact-card {
	text-align: left;

	.header, .sub-header {
		color: #fff;
	}

	.body-text {
		color: #000;
	}

	.impact-logo {
		height: 3.5em;
		width: auto;
	}

	.impact-text {

	}

	.impact-image {
		width: 100%;
		max-width: 600px;
	}

	.image-and-text {
		.flex-row();

		margin: 3rem auto 3rem auto;

		> * {
			width: 50%;	
		}
	}

	.reversed-image-and-text {
		.flex-row-reverse();

		margin: 3rem auto 3rem auto;

		> * {
			width: 50%;	
		}
	}
}

.impact-logo {
	width: 100px;
	height: auto;
}

.impact-image-text {
	height: 12em !important;
}

.triangle {
	width: 100%;
	height: 5em;
}

.triangle-gl-red {
	.triangle();
	background-image: linear-gradient(to left top, @gl-red 0%, @gl-red 50%, transparent 50%);
}

.triangle-gl-dark-blue {
	.triangle();
	background-image: linear-gradient(to left top, @gl-dark-blue 0%, @gl-dark-blue 50%, transparent 50%);
}

.triangle-gl-blue {
	.triangle();
	background-image: linear-gradient(to left top, @gl-light-blue 0%, @gl-light-blue 50%, transparent 50%);
}

.triangle-gl-dark-grey {
	.triangle();
	background-image: linear-gradient(to left top, @gl-dark-grey 0%, @gl-dark-grey 50%, transparent 50%);
}

.triangle-gl-light-grey {
	.triangle();
	background-image: linear-gradient(to left top, @gl-light-grey 0%, @gl-light-grey 50%, transparent 50%);
}

.logo-big {
	width: 7rem;
	height: auto;
}

.round-logo {
	border: 1px solid grey;
	border-radius: 50%;
	margin: 0;
	background-color: #fff;
	background-repeat: no-repeat;
	background-position: center center;
	background-size: 100%;
	height: 5rem;
	width: 5rem;
}

@media only screen and (max-width: 1110px) {
	.impact-card {
		.image-and-text, .reversed-image-and-text {
			flex-direction: column;
			
			> * {
				width: 100%;
			}
		}
	}
}
